---
# yamllint disable rule:line-length

name: 'K3S with Calico and Helm 3'
description: 'Install K3S with Calico network plugin and Helm 3'
# Copied from
# https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/08c13609c1d0c6cb07d45d49d0a876100cf941eb/ci/common
# Thanks @consideratio !
inputs:
  k3s-version:
    description: K3S version (https://github.com/rancher/k3s/releases)
    required: true
    default: v1.18.8+k3s1
  helm-version:
    description: Helm 3 version (https://github.com/helm/helm/releases)
    required: true
    default: v3.3.0
outputs:
  kubeconfig:
    description: Path to kubeconfig file
    value: /etc/rancher/k3s/k3s.yaml
runs:
  using: "composite"
  steps:
    # https://rancher.com/docs/k3s/latest/en/installation/install-options/how-to-flags/
    #
    # NOTE: k3s has a Network Policy controller called kube-router, but it is
    #       not robust enough for use, so we disable it and install our own:
    #       calico. --flannel-backend=none should not be passed if we don't want
    #       to install our own CNI.
    #
    #       ref: https://github.com/rancher/k3s/issues/947#issuecomment-627641541
    #
    # NOTE: k3s 1.16 and older needed a flag named --no-deploy instead of
    #       --disable.
    - run: |
        echo "Setup k3s ${{ inputs.k3s-version }}"
        curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=${{ inputs.k3s-version }} sh -s - \
          --write-kubeconfig-mode=644 \
          "${k3s_disable_command:---disable}" metrics-server \
          "${k3s_disable_command:---disable}" traefik \
          "${k3s_disable_command:---disable}" local-storage \
          --disable-network-policy \
          --flannel-backend=none \
          --docker
      shell: bash

    # Install calico as a CNI to enforce our NetworkPolicies. Note that canal
    # could do this job as well, but we failed to set it up in Travis CI.
    #
    # Below we download the calico.yaml Kubernetes manifest and insert a
    # container_settings section just below the phrase '"type": "calico"' and
    # then `kubectl apply` it.
    #
    # ref: https://rancher.com/docs/k3s/latest/en/installation/network-options/
    #
    - run: |
        echo "Setup calico"
        curl -sfL https://docs.projectcalico.org/v3.14/manifests/calico.yaml \
          | sed '/"type": "calico"/a\
            "container_settings": {\
              "allow_ip_forwarding": true\
            },' \
          | kubectl apply -f -
      shell: bash
      env:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - run: |
        echo "Wait for calico"
        kubectl rollout status --watch --timeout 300s daemonset/calico-node -n kube-system \
          && kubectl rollout status --watch --timeout 300s deployment/calico-kube-controllers -n kube-system \
      shell: bash
      env:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - run: |
        echo "Wait for coredns"
        kubectl rollout status --watch --timeout 300s deployment/coredns -n kube-system
      shell: bash
      env:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - run: |
        echo "Setup Helm ${{ inputs.helm-version }}"
        curl -sf https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | DESIRED_VERSION=${{ inputs.helm-version }} bash
      shell: bash
