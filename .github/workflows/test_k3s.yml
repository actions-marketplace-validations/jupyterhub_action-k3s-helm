---
name: Test

# Inline config of yamllint, ref: https://yamllint.readthedocs.io/
#
# yamllint disable rule:line-length

on:
  pull_request:
  push:
    branches-ignore:
      - "v*"
  workflow_dispatch:

jobs:
  # https://github.com/pre-commit/action
  pre-commit:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0

  test_install_k3s:
    runs-on: ubuntu-latest
    name: Test K3s and Helm
    strategy:
      fail-fast: false
      matrix:
        include:
          - k3s-version: ""
            k3s-channel: latest
            helm-version: ""
          - k3s-version: ""
            k3s-channel: v1.19
            helm-version: v3.4.2
          - k3s-version: ""
            k3s-channel: v1.18
            helm-version: v3.3.4
          - k3s-version: v1.17.13+k3s1
            k3s-channel: ""
            helm-version: v3.2.4
          - k3s-version: v1.16.15+k3s1
            k3s-channel: ""
            helm-version: v3.1.3
    steps:
      - uses: actions/checkout@v2
      - name: Local action
        id: k3s
        uses: ./
        with:
          k3s-version: ${{ matrix.k3s-version }}
          k3s-channel: ${{ matrix.k3s-channel }}
          helm-version: ${{ matrix.helm-version }}
          metrics-enabled: true
          traefik-enabled: true
          docker-enabled: false
      # This action should export KUBECONFIG

      - name: Kubectl
        run: |
          kubectl version
          kubectl get storageclass
          kubectl get deploy,daemonset,pods --all-namespaces
          # These options should be enabled
          kubectl get --namespace kube-system deploy metrics-server
          # Problem with 1.16, ignore since it'll be dropped soon
          if [[ "${{ matrix.k3s-version }}${{ matrix.k3s-channel }}" != v1.16.* ]]; then
              kubectl get --namespace kube-system deploy traefik
          fi
        shell: bash

      - name: Helm
        run: |
          helm version
          helm list
        shell: bash

      - name: Install network policies test
        run: helm install test-calico ./test-calico --wait
        shell: bash

      - name: Run network policies test
        run: helm test test-calico --logs
        shell: bash

  test_install_k3s_options:
    runs-on: ubuntu-latest
    name: Test K3s options
    steps:
      - uses: actions/checkout@v2
      - name: Local action
        id: k3s
        uses: ./
        with:
          k3s-version: ""
          k3s-channel: ""
          helm-version: ""
          metrics-enabled: false
          traefik-enabled: false
          docker-enabled: true
      # This action should export KUBECONFIG

      - name: Kubectl
        run: |
          kubectl version
          kubectl get deploy,daemonset,pods --all-namespaces
          kubectl get --namespace kube-system deploy metrics-server || ret=$?
          if [ $ret -eq 0 ]; then
            echo "ERROR: metrics-server should be disabled"
            exit 1
          fi
          kubectl get --namespace kube-system deploy traefik || ret=$?
          if [ $ret -eq 0 ]; then
            echo "ERROR: traefik should be disabled"
            exit 1
          fi
          docker info
          docker ps
        shell: bash

  # Provides a single status_all check that can be used in GitHub branch
  # protection rules instead of having to list each matrix job
  # https://github.community/t/status-check-for-a-matrix-jobs/127354/7
  status_all:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Status matrix Test
    needs:
      - pre-commit
      - test_install_k3s
      - test_install_k3s_options
    steps:
      - name: Check build matrix status
        if: ${{ needs.test_install_k3s.result != 'success' }}
        run: exit 1
